/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  dev                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      extrudeMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// What to extrude:
//      patch   : from patch of another case ('sourceCase')
//      mesh    : as above but with original case included
//      surface : from externally read surface

constructFrom patch;

// If construct from patch/mesh:
sourceCase "weakDeformation/c1p6_MPDATA_flux/cubedSphere_30_2gauge";
sourcePatches (otherSide);

exposedPatchName "originalPatch";

// Flip surface normals before usage. Valid only for extrude from surface or
// patch.
flipNormals false;

//- Extrudes into sphere around (0 0 0)
extrudeModel        linearRadial;
//extrudeModel        radial;

nLayers             1;
expansionRatio      1.0;

linearRadialCoeffs
{
    R        1.01;
    Rsurface 0.99;
}
//radialCoeffs
//{
//    // Radii specified through interpolation table
//    R               table ((0 6370220)(1 6372320));
//}

// Do front and back need to be merged? Usually only makes sense for 360
// degree wedges.
mergeFaces false;

// Merge small edges. Fraction of bounding box.
mergeTol 0;


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
